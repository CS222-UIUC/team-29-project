# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'  # Only run when frontend files change
  pull_request:
    branches: [ "main" ]
    paths:
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend

    env:
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXTAUTH_URL: http://localhost:3000

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Lint
      run: npm run lint --if-present

    - name: Build
      run: npm run build --if-present

    - name: Run standard tests
      run: npm test -- --testPathIgnorePatterns=".security.test.js|.security.test.tsx|.integration.test.js|.integration.test.tsx"

    - name: Run security tests
      if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
      run: npm test -- --testMatch="**/*.security.test.[jt]s?(x)"

    - name: Run integration tests
      if: github.ref == 'refs/heads/main'
      run: npm test -- --testMatch="**/*.integration.test.[jt]s?(x)"
