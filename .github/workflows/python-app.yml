name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libffi-dev
    
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Install dependencies
      working-directory: ./backend
      run: poetry install --no-interaction
    
    - name: Check code formatting with Black
      working-directory: ./backend
      run: poetry run black --check .
    
    - name: Check import sorting with isort
      working-directory: ./backend
      run: poetry run isort --check .
    
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=150 --statistics
    
    - name: Lint with pylint
      working-directory: ./backend
      run: |
        poetry run pylint $(git ls-files '*.py')
    
    - name: Test with pytest
      working-directory: ./backend
      run: poetry run pytest