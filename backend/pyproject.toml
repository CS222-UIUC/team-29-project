[tool.poetry]
name = "threadflow-backend"
version = "0.1.0"
description = "Backend for ThreadFlow chat application"
authors = ["Thread <tthreadflow@gmail.com>"]
packages = [
    {include = "app"}
]

[tool.poetry.dependencies]
python = ">=3.10,<3.11"
fastapi = "*"
uvicorn = "*"
motor = "*"
pydantic = "*"
python-jose = "*"
google-cloud-secret-manager = "*"
google-generativeai = "*"
python-dotenv = "*"
anthropic = "*"
openai = "*"
email-validator = "*"
pydantic-extra-types = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
httpx = "*"
pytest-asyncio = "^0.26.0"
ruff = "^0.11.5"
nest-asyncio = "^1.5.9"
pymongo = "^4.6.2"
pre-commit = "^3.6.0"

[tool.ruff]
target-version = "py310"
src = ["app"]
line-length = 150

[tool.ruff.lint]
exclude = [".venv", "build", "dist"]
isort.known-first-party = ["app"]
pydocstyle.convention = "google"


select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PLW", # pylint warnings
    "PLC", # pylint convention
    "PLE", # pylint error
    "N",   # pep8-naming
    "D",   # pydocstyle
]

ignore = [
    "E501",    # line too long (handled by formatter)
    "B008",    # do not perform function call in argument defaults
    "B904",    # raise from
    "D100",    # missing module docstring
    "D103",    # missing function docstring
    "D415",    # First line end with period
    "D205",    # 1 blank line
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
